{"version":3,"sources":["CheckListObject.js","components/ListTemple.jsx","App.js","reportWebVitals.js","redux/reducers/someReducer.js","redux/reducers/allReducer.js","index.js"],"names":["PhaseOneList","phaseName","tasks","id","taskName","isChecked","PhaseTwoList","PhaseThreeList","ListTemple","data","list","map","item","localStorage","length","console","log","setItem","JSON","stringify","checkStatus","type","onChange","e","parse","getItem","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","state","someReducer","action","rootReducers","combineReducers","one","composeEnchancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wKAAaA,EAAe,CACxB,CAACC,UAAU,gBACPC,MAAM,CACF,CAACC,GAAG,WAAWC,SAAS,OAAQC,WAAU,GAC1C,CAACF,GAAG,WAAYC,SAAS,OAAQC,WAAU,MAG1CC,EAAe,CACxB,CAACL,UAAU,gBACPC,MAAM,CACF,CAACC,GAAG,WAAWC,SAAS,OAAQC,WAAU,GAC1C,CAACF,GAAG,WAAYC,SAAS,OAAQC,WAAU,MAG1CE,EAAiB,CAC1B,CAACN,UAAU,gBACPC,MAAM,CACF,CAACC,GAAG,WAAWC,SAAS,OAAQC,WAAU,GAC1C,CAACF,GAAG,WAAYC,SAAS,OAAQC,WAAU,M,cClB1CG,EAAa,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACjBC,EAAP,YAAeD,EAAf,MAWA,OACI,gCACI,6BAAKC,EAAKT,YACV,kCAEQS,EAAKR,MAAMS,KAAI,SAACC,GACZ,IAAOT,EAAgBS,EAAhBT,GAAIC,EAAYQ,EAAZR,SAMX,OAL4B,IAAxBS,aAAaC,OACbC,QAAQC,IAAI,mBAEZH,aAAaI,QAAQd,EAAKe,KAAKC,UAAU,CAACC,aAAY,KAGlD,gCACI,uBAAgBC,KAAK,WAAWC,SAAU,WAvBrD,IAACC,IAuBsEX,EAAKT,GAtBxEe,KAAKM,MAAMX,aAAaY,QAAQF,IACnCH,YAChBP,aAAaI,QAAQM,EAAGL,KAAKC,UAAU,CAACC,aAAY,KAEpDP,aAAaI,QAAQM,EAAGL,KAAKC,UAAU,CAACC,aAAY,OAkBdjB,GAA4D,+BAAOC,gBCTpGsB,MAbf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,qDACA,oCACE,cAAC,EAAD,CAAYlB,KAAMT,IAClB,cAAC,EAAD,CAAYS,KAAMH,IAClB,cAAC,EAAD,CAAYG,KAAMF,WCCXqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCPRQ,EAAY,CACdC,MAAM,IAUKC,EAPK,WAA8B,IAA7BD,EAA4B,uDAAtBD,EAAWG,EAAW,uCAGrC,OAFAA,EAAOnB,KAEA,eAAIiB,ICARG,EAJMC,YAAgB,CACjCC,IAAKJ,I,cCMDK,EAAmBC,OAAOC,sCAAwCC,IAElEC,EAAQC,YAAYR,EAAeG,EAAiBM,YAAgBC,OAE5EC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1B5B,M","file":"static/js/main.d6b72dc5.chunk.js","sourcesContent":["export const PhaseOneList = [\n    {phaseName:\"Phase №1\", \n        tasks:[\n            {id:\"Ph-1,T-1\",taskName:\"task\", isChecked:false},\n            {id:\"Ph-1,T-2\", taskName:\"task\", isChecked:false}]\n        }]\n\nexport const PhaseTwoList = [\n    {phaseName:\"Phase №2\", \n        tasks:[\n            {id:\"Ph-2,T-1\",taskName:\"task\", isChecked:false},\n            {id:\"Ph-2,T-2\", taskName:\"task\", isChecked:false}]\n        }]\n\nexport const PhaseThreeList = [\n    {phaseName:\"Phase №3\", \n        tasks:[\n            {id:\"Ph-3,T-1\",taskName:\"task\", isChecked:false},\n            {id:\"Ph-3,T-2\", taskName:\"task\", isChecked:false}]\n        }]","export const ListTemple = ({data}) => {\n    const [list] = data\n\n    const handleChange = (e) => {\n        let CheckBoxStatus = JSON.parse(localStorage.getItem(e))\n        if(CheckBoxStatus.checkStatus){\n          localStorage.setItem(e, JSON.stringify({checkStatus:false}))\n        }else{\n          localStorage.setItem(e, JSON.stringify({checkStatus:true}))\n        }\n    }\n\n    return (\n        <div>\n            <h1>{list.phaseName}</h1>\n            <section>\n                {\n                    list.tasks.map((item)=>{\n                        const {id, taskName} = item\n                        if (localStorage.length === 6) {\n                            console.log(\"storage is full\");\n                          }else{\n                            localStorage.setItem(id , JSON.stringify({checkStatus:false}));\n                        }\n                        return (\n                                <div>\n                                    <input key={id} type=\"checkbox\" onChange={()=>{handleChange(item.id)}}/><span>{taskName}</span>\n                                </div>)\n                    })\n                }\n            </section>\n        </div>\n    )\n}","import {React} from \"react\"\nimport {PhaseOneList, PhaseTwoList, PhaseThreeList} from \"./CheckListObject\"\nimport {ListTemple} from \"./components/ListTemple\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>My startup progress</h1>\n      <section>\n        <ListTemple data={PhaseOneList}/>\n        <ListTemple data={PhaseTwoList}/>\n        <ListTemple data={PhaseThreeList}/>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\n    state:[]\n}\n\nconst someReducer = (state=initState, action) => {\n    switch (action.type){\n        default:\n            return {...state}\n    }\n}\n\nexport default someReducer","import {combineReducers} from \"redux\"\nimport someReducer from \"./someReducer\"\n\nconst rootReducers = combineReducers({\n    one: someReducer,\n})\n\nexport default rootReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//REDUX\n  import rootReducers from \"./redux/reducers/allReducer\"\n  import {Provider} from \"react-redux\"\n  import {createStore, applyMiddleware, compose} from \"redux\"\n  import thunk from \"redux-thunk\" \n\n  const composeEnchancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n  const store = createStore(rootReducers , composeEnchancer(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}