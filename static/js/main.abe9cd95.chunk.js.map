{"version":3,"sources":["CheckListObject.js","App.js","reportWebVitals.js","index.js"],"names":["CheckListObject","phaseName","tasks","idKey","taskName","isChecked","App","className","map","item","localStorage","setItem","JSON","stringify","checkStatus","console","log","getItem","type","checked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAAaA,EAAkB,CAC3B,CAACC,UAAU,gBACPC,MAAM,CACF,CAACC,MAAM,OAAOC,SAAS,OAAQC,WAAU,GACzC,CAACF,MAAM,OAAQC,SAAS,OAAQC,WAAU,KAElD,CAACJ,UAAU,gBACPC,MAAM,CACF,CAACC,MAAM,OAAQC,SAAS,OAAQC,WAAU,KAElD,CAACJ,UAAU,gBACPC,MAAM,CACF,CAACC,MAAM,OAAOC,SAAS,OAAQC,WAAU,GACzC,CAACF,MAAM,OAAOC,SAAS,OAAQC,WAAU,M,OCyBtCC,MAnCf,WAQE,OACE,yBAASC,UAAU,MAAnB,SACE,gCACE,qDACCP,EAAgBQ,KAAI,SAACC,GACpB,IAAOR,EAAoBQ,EAApBR,UAAWC,EAASO,EAATP,MAClB,OACE,oCACE,6BAAKD,IACL,gCACGC,EAAMM,KAAI,SAACC,GAGV,OAFEC,aAAaC,QAAQF,EAAKN,MAAQS,KAAKC,UAAU,CAACC,YAAYL,EAAKJ,UAAWJ,UAAUA,KACxFc,QAAQC,IAAIN,aAAaO,QAAQR,EAAKN,QAEtC,gCACE,uBAAOe,KAAK,WAAYC,QAASV,EAAKJ,YAAY,+BAAOI,EAAKL,qBAR1DH,YCNXmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.abe9cd95.chunk.js","sourcesContent":["export const CheckListObject = [\n    {phaseName:\"Phase №1\", \n        tasks:[\n            {idKey:\"P1T1\",taskName:\"task\", isChecked:false},\n            {idKey:\"P1T2\", taskName:\"task\", isChecked:false}]},\n\n    {phaseName:\"Phase №2\", \n        tasks:[\n            {idKey:\"P2T1\", taskName:\"task\", isChecked:false}]},\n\n    {phaseName:\"Phase №3\", \n        tasks:[\n            {idKey:\"P3T1\",taskName:\"task\", isChecked:false},\n            {idKey:\"P3T2\",taskName:\"task\", isChecked:false}]},\n]","import {React} from \"react\"\nimport {CheckListObject} from \"./CheckListObject\"\n\nfunction App() {\n\n  // const [checked, setChecked] = useState(false)\n \n  // const handleChange = () => {\n  //   setChecked(!checked);\n  // };\n\n  return (\n    <section className=\"App\">\n      <div>\n        <h1>My startup progress</h1>\n        {CheckListObject.map((item)=>{\n          const {phaseName, tasks} = item\n          return (\n            <section key={phaseName}>\n              <h1>{phaseName}</h1>\n              <label>\n                {tasks.map((item)=>{\n                    localStorage.setItem(item.idKey , JSON.stringify({checkStatus:item.isChecked, phaseName:phaseName}));\n                    console.log(localStorage.getItem(item.idKey))\n                  return (\n                    <div>\n                      <input type=\"checkbox\"  checked={item.isChecked}/><span>{item.taskName}</span>\n                    </div>)\n                })}\n              </label>\n            </section>\n          )\n        })}\n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}