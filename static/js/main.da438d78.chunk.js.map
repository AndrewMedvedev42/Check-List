{"version":3,"sources":["CheckListObject.js","redux/actions/phaseActions.js","components/ListTemple.jsx","components/randomFact.jsx","App.js","reportWebVitals.js","redux/reducers/Phase-Reducer.js","redux/reducers/allReducer.js","index.js"],"names":["PhaseOneList","phaseName","tasks","index","id","taskName","isChecked","PhaseTwoList","PhaseThreeList","concludeStatus","e","includes","loadPhase1Stats","data","dispatch","a","statusSummary","type","payload","loadPhase2Stats","loadPhase3Stats","ListTemple","isDone","list","useState","phaseObj","setPhaseObj","useDispatch","gainStatuses","statuses","map","item","localStorage","length","console","log","setItem","JSON","stringify","useEffect","obj","parse","getItem","className","size","defaultChecked","onChange","CheckBoxStatus","input","document","getElementById","find","i","setAttribute","handleChange","RandomFact","randomFact","setRandomFact","reqLink","fetch","then","res","json","text","App","Phase1Status","useSelector","state","Phases","phase1","Phase2Status","phase2","Phase3Status","phase3","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","PhaseReducer","action","rootReducers","combineReducers","composeEnchancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.da438d78.chunk.js","sourcesContent":["export const PhaseOneList = [\n    {phaseName:\"Phase №1\", \n\n        tasks:[\n            {index:0,id:\"Ph-1,T-1\",taskName:\"Rinse the rice\", isChecked:false},\n            {index:1, id:\"Ph-1,T-2\", taskName:\"Bring water to a boil, then add the rice\", isChecked:false},\n            {index:2, id:\"Ph-1,T-3\", taskName:\"Bring water to a boil, then add the rice\", isChecked:false},\n            {index:3, id:\"Ph-1,T-4\", taskName:\"Maintain a boil\", isChecked:false}],\n        // statusOfAll:[false,false]\n}]\n\nexport const PhaseTwoList = [\n    {phaseName:\"Phase №2\", \n        tasks:[\n            {index:0, id:\"Ph-2,T-1\",taskName:\"Know its weaknesses\", isChecked:false},\n            {index:1, id:\"Ph-2,T-2\", taskName:\"task\", isChecked:false},\n            {index:2, id:\"Ph-2,T-3\", taskName:\"task\", isChecked:false},],\n        // statusOfAll:[false,false, false]\n}]\n\nexport const PhaseThreeList = [\n    {phaseName:\"Phase №3\", \n        tasks:[\n            {index:0, id:\"Ph-3,T-1\",taskName:\"Know its weaknesses\", isChecked:false},\n            {index:1, id:\"Ph-3,T-2\", taskName:\"Use a really big bow and arrow\", isChecked:false},\n            {index:2, id:\"Ph-3,T-3\", taskName:\"Blow him up real good\", isChecked:false},\n            {index:3, id:\"Ph-3,T-4\", taskName:\"Rip its heart out\", isChecked:false},\n            {index:4, id:\"Ph-3,T-5\", taskName:\"Still moves? Repeat it in the same order again\", isChecked:false}],\n        // statusOfAll:[false,false]\n}]","\nconst concludeStatus = (e) => {\n    if (e.includes(false)) {\n      return false\n    } else {\n      return true\n    }\n  };\n\nexport const loadPhase1Stats = (data) => async (dispatch) => {\n\n    const statusSummary = concludeStatus(data)\n\n    dispatch({\n        type:\"LOAD_PHASE1_STATS\",\n        payload:{\n            data: statusSummary,\n        }\n    })\n}\n\nexport const loadPhase2Stats = (data) => async (dispatch) => {\n\n    const statusSummary = concludeStatus(data)\n\n    dispatch({\n        type:\"LOAD_PHASE2_STATS\",\n        payload:{\n            data: statusSummary,\n        }\n    })\n}\n\nexport const loadPhase3Stats = (data) => async (dispatch) => {\n\n    const statusSummary = concludeStatus(data)\n\n    dispatch({\n        type:\"LOAD_PHASE3_STATS\",\n        payload:{\n            data: statusSummary,\n        }\n    })\n}","//REACT\nimport {useEffect, useState} from \"react\";\nimport { AiFillCheckCircle } from \"react-icons/ai\";\nimport FadeIn from 'react-fade-in';\n//REDUX\nimport {useDispatch} from \"react-redux\"\nimport {loadPhase1Stats,loadPhase2Stats,loadPhase3Stats} from \"../redux/actions/phaseActions\"\n\nexport const ListTemple = ({data, isDone}) => {\n    const [list] = data\n    const [phaseObj, setPhaseObj] = useState({})\n    const dispatch = useDispatch()\n\n    const gainStatuses = (e) => {\n        const statuses = e.tasks.map((item)=>{\n            return item.isChecked\n        })\n        if(e.phaseName === \"Phase №1\"){\n            dispatch(loadPhase1Stats(statuses));\n        }else if(e.phaseName === \"Phase №2\"){\n            dispatch(loadPhase2Stats(statuses));\n        }else if(e.phaseName === \"Phase №3\"){\n            dispatch(loadPhase3Stats(statuses));\n        }\n    }\n\n    const handleChange = (e) => {\n        let CheckBoxStatus = JSON.parse(localStorage.getItem(phaseObj.phaseName))\n        const input = document.getElementById(`${e}`)\n        CheckBoxStatus.tasks.find((item)=>{\n            if(item.id === e){\n                if(item.isChecked === false){\n                    for (let i = 0; i < CheckBoxStatus.tasks.length; i++) {\n                        if(e === CheckBoxStatus.tasks[i].id){\n                            CheckBoxStatus.tasks[i].isChecked = true;\n                            break;\n                        }\n                    }\n                    localStorage.setItem(phaseObj.phaseName, JSON.stringify(CheckBoxStatus))\n                    gainStatuses(CheckBoxStatus)\n                    input.setAttribute(\"defaultChecked\", true)\n\n                }else{\n                    for (let i = 0; i < CheckBoxStatus.tasks.length; i++) {\n                        if(e === CheckBoxStatus.tasks[i].id){\n                            CheckBoxStatus.tasks[i].isChecked = false;\n                            break;\n                        }\n                    }\n                    localStorage.setItem(phaseObj.phaseName, JSON.stringify(CheckBoxStatus))\n                    gainStatuses(CheckBoxStatus)\n                    input.setAttribute(\"defaultChecked\", false)\n                }\n            }\n        })\n    }\n\n    if (localStorage.length === 3) {\n        console.log();\n      }else{\n        localStorage.setItem(list.phaseName , JSON.stringify(list));\n    }\n\n    useEffect(()=>{\n        const obj = JSON.parse(localStorage.getItem(list.phaseName))\n        setPhaseObj(obj)\n    },[list.phaseName])\n\n    useEffect(()=>{\n        if (phaseObj.tasks) {\n            const statuses = phaseObj.tasks.map((item)=>{\n                return item.isChecked\n            })\n            if(phaseObj.phaseName === \"Phase №1\"){\n                dispatch(loadPhase1Stats(statuses))\n\n            }else if(phaseObj.phaseName === \"Phase №2\"){\n                dispatch(loadPhase2Stats(statuses))\n\n            }else if(phaseObj.phaseName === \"Phase №3\"){\n                dispatch(loadPhase3Stats(statuses))\n            }\n        }\n    },[phaseObj])\n\n    return (\n        <FadeIn>\n        <div className=\"PhaseSection\">\n            <div className=\"PhaseTitleSection\">\n                <h1 className=\"PhaseTitle\">{phaseObj.phaseName}</h1>\n                {isDone ? (<FadeIn><AiFillCheckCircle className=\"DoneMessage\" size={30}/></FadeIn>):\"\"}\n            </div>\n            <section className=\"TasksList\">\n                {phaseObj.tasks && (\n                    phaseObj.tasks.map((item)=>{\n                        const {id, taskName, isChecked} = item\n                        return (\n                            <div key={id} className=\"Task\">\n                                <input id={id} defaultChecked={isChecked} type=\"checkbox\" onChange={()=>{handleChange(id)}}/><span>{taskName}</span>\n                            </div>)\n                    })\n                )}\n            </section>\n        </div>\n        </FadeIn>\n    )\n}","import { useState, useEffect } from \"react\"\n\nexport const RandomFact = ()=>{\n    const [randomFact, setRandomFact] = useState({})\n\n    const reqLink = `https://uselessfacts.jsph.pl/random.json?language=en`\n\n    useEffect(()=>{\n        fetch(reqLink)\n            .then((res)=>{return res.json()})\n                .then((data)=>{setRandomFact(data)})\n    },[reqLink])\n    return (<section>\n        {randomFact.text && (\n            <h1>{randomFact.text}</h1>\n        )}\n    </section>)\n}","import {React} from \"react\"\nimport {PhaseOneList, PhaseTwoList, PhaseThreeList} from \"./CheckListObject\"\nimport {ListTemple} from \"./components/ListTemple\"\nimport {RandomFact} from \"./components/randomFact\"\n\nimport {useSelector} from \"react-redux\"\n\nfunction App(){\n\n  const Phase1Status = useSelector(state => state.Phases.phase1)\n  const Phase2Status = useSelector(state => state.Phases.phase2)\n  const Phase3Status = useSelector(state => state.Phases.phase3)\n\n  return (\n    <div className=\"App\">\n      <h1>My startup progress</h1>\n      <section>\n        <ListTemple data={PhaseOneList} isDone={Phase1Status}/>\n        {Phase1Status ? (<ListTemple data={PhaseTwoList} isDone={Phase2Status}/>):\"\"}\n        {Phase1Status && Phase2Status ? (<ListTemple data={PhaseThreeList} isDone={Phase3Status}/>):\"\"}\n        {Phase1Status && Phase2Status && Phase3Status ? (<RandomFact/>):\"\"}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\n    phase1:false,\n    phase2:false,\n    phase3:false,\n}\n\nconst PhaseReducer = (state=initState, action) => {\n    switch (action.type){\n        case \"LOAD_PHASE1_STATS\":\n            return {...state, phase1:action.payload.data}\n        case \"LOAD_PHASE2_STATS\":\n            return {...state, phase2:action.payload.data}\n        case \"LOAD_PHASE3_STATS\":\n            return {...state, phase3:action.payload.data}\n        default:\n            return {...state}\n    }\n}\n\nexport default PhaseReducer","import {combineReducers} from \"redux\"\nimport PhaseReducer from \"./Phase-Reducer\"\n\n\nconst rootReducers = combineReducers({\n    Phases: PhaseReducer,\n})\n\nexport default rootReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./styles/css/index.css\"\n//REDUX\n  import rootReducers from \"./redux/reducers/allReducer\"\n  import {Provider} from \"react-redux\"\n  import {createStore, applyMiddleware, compose} from \"redux\"\n  import thunk from \"redux-thunk\" \n\n  const composeEnchancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n  const store = createStore(rootReducers , composeEnchancer(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}