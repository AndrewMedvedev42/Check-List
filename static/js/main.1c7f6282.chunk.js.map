{"version":3,"sources":["CheckListObject.js","redux/actions/phaseActions.js","components/ListTemple.jsx","App.js","reportWebVitals.js","redux/reducers/Phase-Reducer.js","redux/reducers/allReducer.js","index.js"],"names":["PhaseOneList","phaseName","tasks","index","id","taskName","isChecked","PhaseTwoList","PhaseThreeList","concludeStatus","e","includes","loadPhase1Stats","data","dispatch","a","statusSummary","type","payload","loadPhase2Stats","loadPhase3Stats","ListTemple","list","useState","phaseObj","setPhaseObj","useDispatch","gainStatuses","statuses","map","item","localStorage","length","console","log","setItem","JSON","stringify","useEffect","obj","parse","getItem","defaultChecked","onChange","CheckBoxStatus","input","document","getElementById","find","i","setAttribute","handleChange","App","Phase1Status","useSelector","state","Phases","phase1","Phase2Status","phase2","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","phase3","PhaseReducer","action","rootReducers","combineReducers","composeEnchancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1c7f6282.chunk.js","sourcesContent":["export const PhaseOneList = [\n    {phaseName:\"Phase №1\", \n\n        tasks:[\n            {index:0,id:\"Ph-1,T-1\",taskName:\"task\", isChecked:false},\n            {index:1, id:\"Ph-1,T-2\", taskName:\"task\", isChecked:false}],\n        // statusOfAll:[false,false]\n}]\n\nexport const PhaseTwoList = [\n    {phaseName:\"Phase №2\", \n\n        tasks:[\n            {index:0, id:\"Ph-2,T-1\",taskName:\"task\", isChecked:false},\n            {index:1, id:\"Ph-2,T-2\", taskName:\"task\", isChecked:false},\n            {index:2, id:\"Ph-2,T-3\", taskName:\"task\", isChecked:false},],\n        // statusOfAll:[false,false, false]\n}]\n\nexport const PhaseThreeList = [\n    {phaseName:\"Phase №3\", \n        tasks:[\n            {index:0, id:\"Ph-3,T-1\",taskName:\"task\", isChecked:false},\n            {index:1, id:\"Ph-3,T-2\", taskName:\"task\", isChecked:false}],\n        // statusOfAll:[false,false]\n}]","\nconst concludeStatus = (e) => {\n    if (e.includes(false)) {\n      return false\n    } else {\n      return true\n    }\n  };\n\nexport const loadPhase1Stats = (data) => async (dispatch) => {\n\n    const statusSummary = concludeStatus(data)\n\n    dispatch({\n        type:\"LOAD_PHASE1_STATS\",\n        payload:{\n            data: statusSummary,\n        }\n    })\n}\n\nexport const loadPhase2Stats = (data) => async (dispatch) => {\n\n    const statusSummary = concludeStatus(data)\n\n    dispatch({\n        type:\"LOAD_PHASE2_STATS\",\n        payload:{\n            data: statusSummary,\n        }\n    })\n}\n\nexport const loadPhase3Stats = (data) => async (dispatch) => {\n\n    const statusSummary = concludeStatus(data)\n\n    dispatch({\n        type:\"LOAD_PHASE3_STATS\",\n        payload:{\n            data: statusSummary,\n        }\n    })\n}","//REACT\nimport {useEffect, useState} from \"react\";\n//REDUX\nimport {useDispatch} from \"react-redux\"\nimport {loadPhase1Stats,loadPhase2Stats,loadPhase3Stats} from \"../redux/actions/phaseActions\"\n\nexport const ListTemple = ({data}) => {\n    const [list] = data\n    const [phaseObj, setPhaseObj] = useState({})\n    const dispatch = useDispatch()\n\n    const gainStatuses = (e) => {\n        const statuses = e.tasks.map((item)=>{\n            return item.isChecked\n        })\n        if(e.phaseName === \"Phase №1\"){\n            dispatch(loadPhase1Stats(statuses));\n        }else if(e.phaseName === \"Phase №2\"){\n            dispatch(loadPhase2Stats(statuses));\n        }else if(e.phaseName === \"Phase №3\"){\n            dispatch(loadPhase3Stats(statuses));\n        }\n    }\n\n    const handleChange = (e) => {\n        let CheckBoxStatus = JSON.parse(localStorage.getItem(phaseObj.phaseName))\n        const input = document.getElementById(`${e}`)\n        CheckBoxStatus.tasks.find((item)=>{\n            if(item.id === e){\n                if(item.isChecked === false){\n                    for (var i = 0; i < CheckBoxStatus.tasks.length; i++) {\n                        if(e === CheckBoxStatus.tasks[i].id){\n                            CheckBoxStatus.tasks[i].isChecked = true;\n                            break;\n                        }\n                    }\n                    localStorage.setItem(phaseObj.phaseName, JSON.stringify(CheckBoxStatus))\n                    gainStatuses(CheckBoxStatus)\n                    input.setAttribute(\"defaultChecked\", true)\n\n                }else{\n                    for (var i = 0; i < CheckBoxStatus.tasks.length; i++) {\n                        if(e === CheckBoxStatus.tasks[i].id){\n                            CheckBoxStatus.tasks[i].isChecked = false;\n                            break;\n                        }\n                    }\n                    localStorage.setItem(phaseObj.phaseName, JSON.stringify(CheckBoxStatus))\n                    gainStatuses(CheckBoxStatus)\n                    input.setAttribute(\"defaultChecked\", false)\n                }\n            }\n        })\n    }\n\n    if (localStorage.length === 3) {\n        console.log();\n      }else{\n        localStorage.setItem(list.phaseName , JSON.stringify(list));\n    }\n\n    useEffect(()=>{\n        const obj = JSON.parse(localStorage.getItem(list.phaseName))\n        setPhaseObj(obj)\n    },[list.phaseName])\n\n    useEffect(()=>{\n        if (phaseObj.tasks) {\n            const statuses = phaseObj.tasks.map((item)=>{\n                return item.isChecked\n            })\n            if(phaseObj.phaseName === \"Phase №1\"){\n                dispatch(loadPhase1Stats(statuses))\n\n            }else if(phaseObj.phaseName === \"Phase №2\"){\n                dispatch(loadPhase2Stats(statuses))\n\n            }else if(phaseObj.phaseName === \"Phase №3\"){\n                dispatch(loadPhase3Stats(statuses))\n            }\n        }\n    },[phaseObj])\n\n    return (\n        <div>\n            <h1>{phaseObj.phaseName}</h1>\n            <section>\n                {phaseObj.tasks && (\n                    phaseObj.tasks.map((item)=>{\n                        const {id, taskName, isChecked} = item\n                        return (\n                            <div key={id}>\n                                <input id={id} defaultChecked={isChecked} type=\"checkbox\" onChange={()=>{handleChange(id)}}/><span>{taskName}</span>\n                            </div>)\n                    })\n                )}\n            </section>\n        </div>\n    )\n}","import {React} from \"react\"\nimport {PhaseOneList, PhaseTwoList, PhaseThreeList} from \"./CheckListObject\"\nimport {ListTemple} from \"./components/ListTemple\"\n\nimport {useSelector} from \"react-redux\"\n\nfunction App(){\n\n  const Phase1Status = useSelector(state => state.Phases.phase1)\n  const Phase2Status = useSelector(state => state.Phases.phase2)\n\n  return (\n    <div className=\"App\">\n      <h1>My startup progress</h1>\n      <section>\n        <ListTemple data={PhaseOneList}/>\n        {Phase1Status ? (<ListTemple data={PhaseTwoList}/>):\"\"}\n        {Phase1Status && Phase2Status ? (<ListTemple data={PhaseThreeList}/>):\"\"}\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\n    phase1:[],\n    phase2:[],\n    phase3:[],\n}\n\nconst PhaseReducer = (state=initState, action) => {\n    switch (action.type){\n        case \"LOAD_PHASE1_STATS\":\n            return {...state, phase1:action.payload.data}\n        case \"LOAD_PHASE2_STATS\":\n            return {...state, phase2:action.payload.data}\n        case \"LOAD_PHASE3_STATS\":\n            return {...state, phase3:action.payload.data}\n        default:\n            return {...state}\n    }\n}\n\nexport default PhaseReducer","import {combineReducers} from \"redux\"\nimport PhaseReducer from \"./Phase-Reducer\"\n\n\nconst rootReducers = combineReducers({\n    Phases: PhaseReducer,\n})\n\nexport default rootReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//REDUX\n  import rootReducers from \"./redux/reducers/allReducer\"\n  import {Provider} from \"react-redux\"\n  import {createStore, applyMiddleware, compose} from \"redux\"\n  import thunk from \"redux-thunk\" \n\n  const composeEnchancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n  const store = createStore(rootReducers , composeEnchancer(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}