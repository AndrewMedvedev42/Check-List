{"version":3,"sources":["CheckListObject.js","components/ListTemple.jsx","redux/actions/phaseActions.js","App.js","reportWebVitals.js","redux/reducers/Phase-Reducer.js","redux/reducers/allReducer.js","index.js"],"names":["PhaseOneList","phaseName","tasks","index","id","taskName","isChecked","PhaseTwoList","PhaseThreeList","ListTemple","data","list","useState","phaseObj","setPhaseObj","dispatch","useDispatch","localStorage","length","console","log","setItem","JSON","stringify","useEffect","obj","parse","getItem","statuses","map","item","a","type","payload","loadPhase1Stats","loadPhase2Stats","loadPhase3Stats","defaultChecked","onChange","e","CheckBoxStatus","input","document","getElementById","find","i","setAttribute","handleChange","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","phase1","phase2","phase3","PhaseReducer","state","action","rootReducers","combineReducers","composeEnchancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6241f0f2.chunk.js","sourcesContent":["export const PhaseOneList = [\n    {phaseName:\"Phase №1\", \n\n        tasks:[\n            {index:0,id:\"Ph-1,T-1\",taskName:\"task\", isChecked:false},\n            {index:1, id:\"Ph-1,T-2\", taskName:\"task\", isChecked:false}],\n        // statusOfAll:[false,false]\n}]\n\nexport const PhaseTwoList = [\n    {phaseName:\"Phase №2\", \n\n        tasks:[\n            {index:0, id:\"Ph-2,T-1\",taskName:\"task\", isChecked:false},\n            {index:1, id:\"Ph-2,T-2\", taskName:\"task\", isChecked:false},\n            {index:2, id:\"Ph-2,T-3\", taskName:\"task\", isChecked:false},],\n        // statusOfAll:[false,false, false]\n}]\n\nexport const PhaseThreeList = [\n    {phaseName:\"Phase №3\", \n        tasks:[\n            {index:0, id:\"Ph-3,T-1\",taskName:\"task\", isChecked:false},\n            {index:1, id:\"Ph-3,T-2\", taskName:\"task\", isChecked:false}],\n        // statusOfAll:[false,false]\n}]","//REACT\nimport {useEffect, useState} from \"react\";\n//REDUX\nimport {useDispatch} from \"react-redux\"\nimport {loadPhase1Stats,loadPhase2Stats,loadPhase3Stats} from \"../redux/actions/phaseActions\"\n\nexport const ListTemple = ({data}) => {\n    const [list] = data\n    const [phaseObj, setPhaseObj] = useState({})\n    const dispatch = useDispatch()\n\n    const handleChange = (e) => {\n        let CheckBoxStatus = JSON.parse(localStorage.getItem(phaseObj.phaseName))\n        const input = document.getElementById(`${e}`)\n        console.log(e);\n        CheckBoxStatus.tasks.find((item)=>{\n            if(item.id === e){\n                if(item.isChecked === false){\n                    for (var i = 0; i < CheckBoxStatus.tasks.length; i++) {\n                        if(e === CheckBoxStatus.tasks[i].id){\n                            CheckBoxStatus.tasks[i].isChecked = true;\n                            // CheckBoxStatus.statusOfAll[i] = true\n                            break;\n                        }\n                    }\n                    localStorage.setItem(phaseObj.phaseName, JSON.stringify(CheckBoxStatus))\n                    input.setAttribute(\"defaultChecked\", true)\n\n                }else{\n                    for (var i = 0; i < CheckBoxStatus.tasks.length; i++) {\n                        if(e === CheckBoxStatus.tasks[i].id){\n                            CheckBoxStatus.tasks[i].isChecked = false;\n                            // CheckBoxStatus.statusOfAll[i] = false\n                            break;\n                        }\n                    }\n                    localStorage.setItem(phaseObj.phaseName, JSON.stringify(CheckBoxStatus))\n                    input.setAttribute(\"defaultChecked\", false)\n                }\n            }\n        })\n    }\n\n    if (localStorage.length === 3) {\n        console.log();\n      }else{\n        localStorage.setItem(list.phaseName , JSON.stringify(list));\n    }\n\n    useEffect(()=>{\n        const obj = JSON.parse(localStorage.getItem(list.phaseName))\n        setPhaseObj(obj)\n    },[list.phaseName])\n\n    useEffect(()=>{\n        if (phaseObj.tasks) {\n            const statuses = phaseObj.tasks.map((item)=>{\n                return item.isChecked\n            })\n            if(phaseObj.phaseName === \"Phase №1\"){\n                dispatch(loadPhase1Stats(statuses))\n\n            }else if(phaseObj.phaseName === \"Phase №2\"){\n                dispatch(loadPhase2Stats(statuses))\n\n            }else if(phaseObj.phaseName === \"Phase №3\"){\n                dispatch(loadPhase3Stats(statuses))\n            }\n        }\n    })\n\n    return (\n        <div>\n            <h1>{phaseObj.phaseName}</h1>\n            <section>\n                {phaseObj.tasks && (\n                    phaseObj.tasks.map((item)=>{\n                        const {id, taskName, isChecked} = item\n                        return (\n                            <div key={id}>\n                                <input id={id} defaultChecked={isChecked} type=\"checkbox\" onChange={()=>{handleChange(id)}}/><span>{taskName}</span>\n                            </div>)\n                    })\n                )}\n            </section>\n        </div>\n    )\n}","export const loadPhase1Stats = (data) => async (dispatch) => {\n    dispatch({\n        type:\"LOAD_PHASE1_STATS\",\n        payload:{\n            data: data,\n        }\n    })\n}\n\nexport const loadPhase2Stats = (data) => async (dispatch) => {\n    dispatch({\n        type:\"LOAD_PHASE2_STATS\",\n        payload:{\n            data: data,\n        }\n    })\n}\n\nexport const loadPhase3Stats = (data) => async (dispatch) => {\n    dispatch({\n        type:\"LOAD_PHASE3_STATS\",\n        payload:{\n            data: data,\n        }\n    })\n}","import {React} from \"react\"\nimport {PhaseOneList, PhaseTwoList, PhaseThreeList} from \"./CheckListObject\"\nimport {ListTemple} from \"./components/ListTemple\"\n\nfunction App(){\n\n  \n\n  return (\n    <div className=\"App\">\n      <h1>My startup progress</h1>\n      <section>\n        <ListTemple data={PhaseOneList}/>\n        <ListTemple data={PhaseTwoList}/>\n        <ListTemple data={PhaseThreeList}/>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initState = {\n    phase1:[],\n    phase2:[],\n    phase3:[],\n}\n\nconst PhaseReducer = (state=initState, action) => {\n    switch (action.type){\n        case \"LOAD_PHASE1_STATS\":\n            return {...state, phase1:action.payload.data}\n        case \"LOAD_PHASE2_STATS\":\n            return {...state, phase2:action.payload.data}\n        case \"LOAD_PHASE3_STATS\":\n            return {...state, phase3:action.payload.data}\n        default:\n            return {...state}\n    }\n}\n\nexport default PhaseReducer","import {combineReducers} from \"redux\"\nimport PhaseReducer from \"./Phase-Reducer\"\n\n\nconst rootReducers = combineReducers({\n    PhaseReducer: PhaseReducer,\n})\n\nexport default rootReducers","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//REDUX\n  import rootReducers from \"./redux/reducers/allReducer\"\n  import {Provider} from \"react-redux\"\n  import {createStore, applyMiddleware, compose} from \"redux\"\n  import thunk from \"redux-thunk\" \n\n  const composeEnchancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n  const store = createStore(rootReducers , composeEnchancer(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}